declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"

define void @printi(i32) {
	%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
	call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
	ret void
}

define void @print(i8*) {
	%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
	call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
	ret void
}

define void @main() {
	%st_ptr = alloca i32, i32 50
	%t0 = add i32 0, 0
; S->Type ID ASSIGN Exp SC
	%t1 = getelementptr i32, i32* %st_ptr, i32 0
	store i32 %t0, i32* %t1
	br label %label_24
label_24:
	br label %label_26
label_26:
	%t2 = getelementptr i32, i32* %st_ptr, i32 0
	%t3 = load i32, i32* %t2
	%t4 = add i32 10, 0
	%t5 = icmp slt i32 %t3, %t4
	br i1 %t5, label %label_32, label %label_61
label_32:
	%t6 = getelementptr i32, i32* %st_ptr, i32 0
	%t7 = load i32, i32* %t6
	%t8 = add i32 1, 0
	%t9 = add i32 %t7, %t8
	%t10 = getelementptr i32, i32* %st_ptr, i32 0
	store i32 %t9, i32* %t10
	br label %label_40
label_40:
	%t11 = getelementptr i32, i32* %st_ptr, i32 0
	%t12 = load i32, i32* %t11
	%t13 = add i32 2, 0
	%t14 = icmp eq i32 %t12, %t13
	br i1 %t14, label %label_46, label %label_51
label_46:
	br label %label_26
	br label %label_51

	br label %label_51
label_51:
	%t15 = getelementptr i32, i32* %st_ptr, i32 0
	%t16 = load i32, i32* %t15
; Call->ID...
	call void @printi(i32%t16)

	br label %label_26
	br label %label_26

	br label %label_61
label_61:
	ret void
}

